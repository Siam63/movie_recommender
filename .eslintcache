[{"/Users/siam/Desktop/MovieRecommender/src/App.js":"1","/Users/siam/Desktop/MovieRecommender/src/NavBar.js":"2","/Users/siam/Desktop/MovieRecommender/src/components/RatingBox.js":"3","/Users/siam/Desktop/MovieRecommender/src/index.js":"4","/Users/siam/Desktop/MovieRecommender/src/Form2.js":"5","/Users/siam/Desktop/m_recommender/src/App.js":"6","/Users/siam/Desktop/m_recommender/src/Calcs.js":"7","/Users/siam/Desktop/m_recommender/src/components/RatingBox.js":"8","/Users/siam/Desktop/m_recommender/src/index.js":"9","/Users/siam/Desktop/m_recommender/src/Calcs2.js":"10","/Users/siam/Desktop/m_recommender/src/Form2.js":"11"},{"size":686,"mtime":1607093431773,"results":"12","hashOfConfig":"13"},{"size":899,"mtime":1607093431775,"results":"14","hashOfConfig":"13"},{"size":2528,"mtime":1607093431775,"results":"15","hashOfConfig":"13"},{"size":479,"mtime":1607093431776,"results":"16","hashOfConfig":"13"},{"size":10689,"mtime":1607093431774,"results":"17","hashOfConfig":"13"},{"size":686,"mtime":1607093431773,"results":"18","hashOfConfig":"19"},{"size":11059,"mtime":1607093431774,"results":"20","hashOfConfig":"19"},{"size":2528,"mtime":1607093431775,"results":"21","hashOfConfig":"19"},{"size":479,"mtime":1607093431776,"results":"22","hashOfConfig":"19"},{"size":874,"mtime":1607093431774,"results":"23","hashOfConfig":"19"},{"size":10689,"mtime":1607093431774,"results":"24","hashOfConfig":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r9k5u5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"vgwcc0",{"filePath":"38","messages":"39","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"/Users/siam/Desktop/MovieRecommender/src/App.js",[],"/Users/siam/Desktop/MovieRecommender/src/NavBar.js",[],"/Users/siam/Desktop/MovieRecommender/src/components/RatingBox.js",[],"/Users/siam/Desktop/MovieRecommender/src/index.js",[],"/Users/siam/Desktop/MovieRecommender/src/Form2.js",["52","53","54","55","56","57","58","59","60","61","62","63"],"/Users/siam/Desktop/m_recommender/src/App.js",[],["64","65"],"/Users/siam/Desktop/m_recommender/src/Calcs.js",["66","67","68","69","70","71","72","73","74","75","76","77"],"import React from 'react';\nimport RatingBox from './components/RatingBox';\nimport {movieList, ratings} from './data';\nimport {Card, Button} from \"react-bootstrap\";\nimport { Calcs2 } from './Calcs2';\n\nclass Calcs extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n        position: [],\n        data: [],\n        recommendedMovies : [],\n        values: [],\n        isVisible: true\n\n    }\n    this.movieList = movieList;\n    this.ratings=ratings;\n}\n    handleValue= (e, i) => {\n        this.setState(state => {\n            const position = [...state.position, i];\n            const data = [...state.data, e];\n            return {\n              position, \n              data,\n            };\n          });\n        console.log(this.state);\n        console.log(e + \" \" + i  )\n    }\n    test(item, i) {  \n        if ((i> -1 && i < 3) ||(i> 6 && i < 10)||(i> 13 && i < 17)||(i> 20 && i < 24)||(i> 27 && i < 31)){\n        return  (                \n        <div className=\"card-container\">\n        <Card style={{ width: '30rem' }} >\n            {/* {console.log(item + \" \" + i)}        */}\n        <Card.Body>\n        <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/'+(i)+'.jpg'} ></Card.Img>\n            <Card.Title>{item}</Card.Title>\n            <Card.Text>\n            Please rate the movie from the following ratings, 0 being worst and 5 being best.\n            </Card.Text>\n            <RatingBox class=\"rating-box\" getValue={((e) => this.handleValue(e, i))} />\n        </Card.Body>\n        </Card>\n        </div>\n        )\n    }\n}\n\n\ndisplayData = () => {\n    console.log(this.state.data);\n    let testMap = new Map();\n    for (let i = 0; i<this.state.position.length; i++) {\n        console.log(i + \" \" + this.state.position[i] + \" \" + this.state.data[i]);\n        testMap[this.state.position[i]] = this.state.data[i];\n    }\n    for (let i = 0; i<35; i++) {\n        if (testMap[i] == null) {\n            testMap[i] = -1;\n        }\n    }\n    let altonFinesse = [];\n\n    for (let i = 0; i <35; i++) {\n        altonFinesse.push(parseInt(testMap[i]));\n        \n    }\n    console.log(altonFinesse);\n    console.log(testMap.toString() + 'THIS TEST MAP');\n    this.doCalcs(altonFinesse);\n    \n}\ndoCalcs = (userInput) => {\n    let simScoreList = [];\n    \n\n    for (let i = 0; i < ratings.length; i++) {\n        /*let div = document.createElement(\"div\");\n\n        let heading = document.createElement(\"h2\");\n        heading.appendChild(document.createTextNode(\"Sim(\" + i + \", TestUser)\"));\n        div.appendChild(heading);\n    \n\n        let scorenode = document.createElement(\"p\");*/\n        let score = this.findSimilarity(ratings[i], userInput);\n        /*let scoretext = document.createTextNode(\"Score = \" + score);\n        scorenode.appendChild(scoretext);\n        div.appendChild(scorenode);\n\n\n        document.getElementById(\"main\").appendChild(div);*/\n\n        simScoreList.push(score);\n        \n        //Do something\n        \n    }\n    \n    let simusers = this.getUsersWithPosScore(simScoreList);\n    console.log(\"Similarity Scores: \" + simScoreList.toString());\n    console.log(\"Users with Sim Scores > 0: \" + simusers.toString());\n    let predictedRatingForMovie = new Map();\n    for (let i = 0; i < userInput.length; i++)  {\n        let predictedRating;\n        if (userInput[i] == -1) {\n            let numandden = this.calcNumAndDenRecommender(simusers,simScoreList,i);\n            predictedRating = ( numandden[0] / numandden[1]);\n            //console.log(\"Numerator = \" + numandden[0]);\n            //console.log(\"Denominator = \" + numandden[1]);\n            predictedRatingForMovie.set(i,predictedRating);\n            //console.log(\"Users Predicted Rating for Movie \" + i + \" is \" + predictedRating);\n        }\n        \n    }\n\n    let mapSorted = new Map([...predictedRatingForMovie.entries()].sort((a, b) => b[1] - a[1]));\n    let recommendedMovies1 = [];\n    let values1 = [];\n    //mapSorted = filterRatingsAboveFour(mapSorted);\n    mapSorted.forEach( (value, key) => {\n        console.log(\"Predicted Rating for Movie \" + movieList[key] + \" is \" + value);\n        recommendedMovies1.push(key);\n        values1.push(value);\n    });\n    this.setState({ \n        recommendedMovies: [...this.state.recommendedMovies, ...recommendedMovies1],\n        values: [...this.state.values, ...values1]\n     }, () => {\n        this.setState({ \n            isVisible: false\n         }, () => {\n             console.log(\"yay concurrency\");\n         })\n      });  \n    \n    //findSimilarity(ratings[0],testuserrating);\n    console.log(\"Content Profile: \" + this.getUserContentProfile(userInput));\n    //document.getElementById(\"btnLoad\").disabled = \"true\";\n    this.generateSimMatrix();\n}\n\ngenerateSimMatrix = ()  =>   {\n    let simMatrix = [];\n    for (let i = 0; i < ratings.length; i++)    {\n        let temp = [];\n        for (let k = 0; k < ratings.length; k++) {\n            temp.push(this.findSimilarity(ratings[i],ratings[k]));\n        }\n        simMatrix.push(temp);\n    }\n}\n\nfilterRatingsAboveFour = (map)  =>   {\n    let resmap = new Map();\n    map.forEach( (value, key) => {\n        if (value >= 4)  {\n            resmap.set(key,value);\n        }\n    });\n    return resmap;\n}\n\ngetUserContentProfile = (userratings)  => {\n    let comedySum = 0; let comLen = 0;\n    let romanceSum = 0; let romLen = 0;\n    let dramaSum = 0; let dramLen = 0;\n    let animationSum = 0; let animLen = 0;\n    let sportSum = 0; let sporLen = 0;\n    for (let i = 0; i < 7; i++) { if (userratings[i] != -1) { comedySum += userratings[i]; comLen++; } }\n    for (let i = 7; i < 14; i++) { if (userratings[i] != -1) { romanceSum += userratings[i]; romLen++ } }\n    for (let i = 14; i < 21; i++) { if (userratings[i] != -1) { dramaSum += userratings[i]; dramLen++; } }\n    for (let i = 21; i < 28; i++) { if (userratings[i] != -1) { animationSum += userratings[i]; animLen++; } }\n    for (let i = 28; i < 35; i++) { if (userratings[i] != -1) { sportSum += userratings[i]; sporLen++; } }\n\n    return [ ((comedySum/comLen)/5), ((romanceSum/romLen)/5), ((dramaSum/dramLen)/5), ((animationSum/animLen)/5), ((sportSum/sporLen)/5)  ];\n}\n\ncalcNumAndDenRecommender = (simusers, simScoreList, movieIndex) => {\n    let num = 0;\n    let den = 0;\n    for (let i = 0; i < simusers.length; i++)   {\n        if (ratings[simusers[i]][movieIndex] != -1)   {\n            let simscorebyuser = simScoreList[simusers[i]];\n            num += ( simscorebyuser * ratings[simusers[i]][movieIndex] );\n            den += simscorebyuser;\n        }\n    }\n    let res = [num,den];\n    return res;\n}\n\ngetUsersWithPosScore = (simscorelist) => {\n    let res = [];   \n    for (let i = 0; i < simscorelist.length; i++)   {\n        if (simscorelist[i] > 0)    {\n            res.push(i);\n        }\n    }\n    return res;     //list of indexes (users) with positive similarity scores\n}\n\n\nfindSimilarity = (user1,user2) =>  {\n    let common = this.findCommonMovies(user1, user2);                //array of indexes of common movies rated\n    let profile1 = this.getRatingsForCommonMovies(user1, common);    //array of ratings for user1\n    let profile2 = this.getRatingsForCommonMovies(user2, common);    //array of ratings for user2\n    let average1 = this.getAverageRating(profile1);\n    let average2 = this.getAverageRating(profile2);\n    let numandden = this.calcNumAndDen(profile1,profile2,average1,average2);\n    let sim;\n    if (numandden[0] == 0 || numandden[1] == 0) { sim = 0; }\n    else    { sim = numandden[0]/numandden[1]; } \n    //console.log(\"Num = \" + numandden[0] + \"    Den = \" + numandden[1] + \"    Profile1 = \" + profile1.toString() + \"    Profile2 = \" + profile2.toString());\n    /*STEPS:\n    -find common rated movies between user and user profiles in db\n    -get ratings for these movies from both users\n    -get average user rating on these common movies\n    -do calcs for NUM and DEN and find similarity score\n    \n    console.log(\"Common Movies: \" + common.toString());\n    console.log(\"Ratings for User 1: \" + profile1.toString());\n    console.log(\"Ratings for User 2: \" + profile2.toString());\n    console.log(\"Average Rating for User 1: \" + average1);\n    console.log(\"Average Rating for User 2: \" + average2);\n    console.log(\"Numerator: \" + numandden[0]);\n    console.log(\"Denominator: \" + numandden[1]);\n    console.log(\"Similarity Score: \" + sim);\n    */\n    return sim;\n}\n\n\ncalcNumAndDen = (ratings1, ratings2, average1, average2) =>   {\n    let num = 0;\n    let denopart1 = 0;\n    let denopart2 = 0;\n    for (let i = 0; i < ratings1.length; i++)   {\n        num += ( (ratings1[i]-average1) * (ratings2[i]-average2) );\n        denopart1 += Math.pow((ratings1[i]-average1), 2);\n        denopart2 += Math.pow((ratings2[i]-average2), 2);\n    }\n    let den = Math.sqrt(denopart1*denopart2);\n    let res = [num,den];\n    return res;\n}\n\ngetAverageRating = (ratings) => {\n    let sum = 0;\n    for (let i = 0; i < ratings.length; i++)    {\n        sum = ratings[i] + sum;\n    }\n    let average = sum/ratings.length;\n    if (average > 6000) { \n        console.log(average);\n        console.log(\"OVCER 6000\");\n        console.log(ratings);\n    }\n    return (average);\n}\n\ngetRatingsForCommonMovies = (user, commonMovies) => {\n    let ratings = [];\n    for (let i = 0; i < commonMovies.length; i++)   {\n        ratings.push(user[commonMovies[i]]);\n    }\n    return ratings;\n}\n\nfindCommonMovies = (arr1, arr2) =>{\n    let result = [];\n    for (let i = 0; i < arr1.length; i++)   {\n        if (arr1[i] != -1 && arr2[i] != -1) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n    render() {\n        if (this.state.isVisible) {\n        return (\n            <>  \n            <div className=\"finesse\">\n            {\n            this.movieList.map((item,i) => (\n                <div key={i}>\n                    {this.test(item,(i))}\n                </div>\n                        )) \n                }\n                </div> \n                <div className=\"YERRRRRR\">\n                <Button variant=\"danger\" className=\"BARERATINGSFAM\" onClick={this.displayData}>SUBMIT RATINGS</Button>\n                </div>\n            </>\n        )\n    }\n    else if (!this.state.isVisible) {\n        console.log(this.state.recommendedMovies);\n        return  (                \n            <>\n            <div className=\"finesse\">\n            {\n            this.state.recommendedMovies.map((item,i) => (\n                <div key={i}>\n                    <div className=\"card-container\">\n            <Card style={{ width: '30rem' }} >\n            <Card.Body>\n            <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/'+(item)+'.jpg'} ></Card.Img>\n                <Card.Title>{movieList[item]}</Card.Title>\n                <Card.Text>\n                Your predicted rating for this movie is {this.state.values[i]}\n                </Card.Text>\n            </Card.Body>\n            </Card>\n            </div>\n                </div>\n                        )) \n                }\n                </div> \n            </>\n            )\n    }\n}\n\n}\nexport {Calcs};",["78","79"],"/Users/siam/Desktop/m_recommender/src/components/RatingBox.js",[],"/Users/siam/Desktop/m_recommender/src/index.js",[],["80","81"],"/Users/siam/Desktop/m_recommender/src/Calcs2.js",[],"/Users/siam/Desktop/m_recommender/src/Form2.js",["82","83","84","85","86","87","88","89","90","91","92","93"],"import React from 'react';\nimport './App.css';\nimport {movieList, ratings, users} from './data';\nimport {Dropdown, Button, Card} from \"react-bootstrap\";\n\n\nclass Form2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: 0,\n      calculate: false,\n      recommendedMovies: [],\n      values: []\n    }\n    this.movieList = movieList;\n    this.ratings=ratings;\n    this.users=users;\n}\nhandleOnClick = (item) => {\n  this.setState({ \n    position: item.target.dataset.id\n }, () => {\n  console.log(this.state.position);\n  });  \n}\nhandleCalculations = () => {\n   console.log(this.ratings[this.state.position]);\n   this.doCalcs(this.ratings[this.state.position]);\n}\n\n  render() {\n    if (!this.state.calculate) {\n      return (\n          <div className=\"nav-container\">\n            <div className =\"centerFriends\">\n            <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                Choose User Dropdown Menu\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {this.users.map((item, i) => (\n                <div key={i}>\n                  <Dropdown.Item href=\"#/action-1\" data-id={i} onClick={(item) => {this.handleOnClick(item)}}>{item}</Dropdown.Item>\n                </div>\n              ))\n              }\n            </Dropdown.Menu>\n            </Dropdown>\n            <Button className=\"calc-button\" as=\"input\" type=\"button\" value=\"Run Calculations\" onClick ={this.handleCalculations} />\n          </div>\n        </div>\n      );\n        }\n     else if (this.state.calculate) {\n        return  (                \n            <>\n            <h1 className=\"centerWee1\">{this.users[this.state.position] + '\\'s Ratings'}</h1>\n            <div className=\"finesse\">\n            { this.ratings[this.state.position].filter(item => item !=-1).map((item, i) => (\n            <Card style={{ width: '18rem' }} key={i}>\n                <Card.Body>\n                    <Card.Title>{this.movieList[i]}</Card.Title>\n                    <Card.Text className=\"mb-2 text-muted\">{this.users[this.state.position] +' rated this movie a ' + item}</Card.Text>\n                </Card.Body>\n            </Card>\n            ))}\n            </div>\n            <h2 className=\"centerWee\">Based on your ratings we'd recommend these movies...</h2>\n            <div className=\"finesse\">\n            {\n            this.state.recommendedMovies.map((item,i) => (\n                <div key={i}>\n                    <div className=\"card-container\">\n            <Card style={{ width: '30rem' }} >\n            <Card.Body>\n            <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/'+(item)+'.jpg'} ></Card.Img>\n                <Card.Title>{movieList[item]}</Card.Title>\n                <Card.Text>\n                Your predicted rating for this movie is {this.state.values[i]}\n                </Card.Text>\n            </Card.Body>\n            </Card>\n            </div>\n                </div>\n                        )) }\n                </div> \n            </>\n            )\n      }\n    }\n    doCalcs = (userInput) => {\n      let simScoreList = [];\n      \n  \n      for (let i = 0; i < ratings.length; i++) {\n          /*let div = document.createElement(\"div\");\n  \n          let heading = document.createElement(\"h2\");\n          heading.appendChild(document.createTextNode(\"Sim(\" + i + \", TestUser)\"));\n          div.appendChild(heading);\n      \n  \n          let scorenode = document.createElement(\"p\");*/\n          let score = this.findSimilarity(ratings[i], userInput);\n          /*let scoretext = document.createTextNode(\"Score = \" + score);\n          scorenode.appendChild(scoretext);\n          div.appendChild(scorenode);\n  \n  \n          document.getElementById(\"main\").appendChild(div);*/\n  \n          simScoreList.push(score);\n          \n          //Do something\n          \n      }\n      \n      let simusers = this.getUsersWithPosScore(simScoreList);\n      console.log(\"Similarity Scores: \" + simScoreList.toString());\n      console.log(\"Users with Sim Scores > 0: \" + simusers.toString());\n      let predictedRatingForMovie = new Map();\n      for (let i = 0; i < userInput.length; i++)  {\n          let predictedRating;\n          if (userInput[i] == -1) {\n              let numandden = this.calcNumAndDenRecommender(simusers,simScoreList,i);\n              predictedRating = ( numandden[0] / numandden[1]);\n              //console.log(\"Numerator = \" + numandden[0]);\n              //console.log(\"Denominator = \" + numandden[1]);\n              predictedRatingForMovie.set(i,predictedRating);\n              //console.log(\"Users Predicted Rating for Movie \" + i + \" is \" + predictedRating);\n          }\n          \n      }\n  \n      let mapSorted = new Map([...predictedRatingForMovie.entries()].sort((a, b) => b[1] - a[1]));\n      let recommendedMovies1 = [];\n      let values1 = [];\n      //mapSorted = filterRatingsAboveFour(mapSorted);\n      mapSorted.forEach( (value, key) => {\n          console.log(\"Predicted Rating for Movie \" + movieList[key] + \" is \" + value);\n          recommendedMovies1.push(key);\n          values1.push(value);\n      });\n      this.setState({ \n          recommendedMovies: [...this.state.recommendedMovies, ...recommendedMovies1],\n          values: [...this.state.values, ...values1]\n       }, () => {\n          this.setState({ \n              calculate: true\n           }, () => {\n               console.log(\"yay concurrency\");\n           })\n        });  \n      \n      //findSimilarity(ratings[0],testuserrating);\n      console.log(\"Content Profile: \" + this.getUserContentProfile(userInput));\n      //document.getElementById(\"btnLoad\").disabled = \"true\";\n      this.generateSimMatrix();\n  }\n  \n  generateSimMatrix = ()  =>   {\n      let simMatrix = [];\n      for (let i = 0; i < ratings.length; i++)    {\n          let temp = [];\n          for (let k = 0; k < ratings.length; k++) {\n              temp.push(this.findSimilarity(ratings[i],ratings[k]));\n          }\n          simMatrix.push(temp);\n      }\n  }\n  \n  filterRatingsAboveFour = (map)  =>   {\n      let resmap = new Map();\n      map.forEach( (value, key) => {\n          if (value >= 4)  {\n              resmap.set(key,value);\n          }\n      });\n      return resmap;\n  }\n  \n  getUserContentProfile = (userratings)  => {\n      let comedySum = 0; let comLen = 0;\n      let romanceSum = 0; let romLen = 0;\n      let dramaSum = 0; let dramLen = 0;\n      let animationSum = 0; let animLen = 0;\n      let sportSum = 0; let sporLen = 0;\n      for (let i = 0; i < 7; i++) { if (userratings[i] != -1) { comedySum += userratings[i]; comLen++; } }\n      for (let i = 7; i < 14; i++) { if (userratings[i] != -1) { romanceSum += userratings[i]; romLen++ } }\n      for (let i = 14; i < 21; i++) { if (userratings[i] != -1) { dramaSum += userratings[i]; dramLen++; } }\n      for (let i = 21; i < 28; i++) { if (userratings[i] != -1) { animationSum += userratings[i]; animLen++; } }\n      for (let i = 28; i < 35; i++) { if (userratings[i] != -1) { sportSum += userratings[i]; sporLen++; } }\n  \n      return [ ((comedySum/comLen)/5), ((romanceSum/romLen)/5), ((dramaSum/dramLen)/5), ((animationSum/animLen)/5), ((sportSum/sporLen)/5)  ];\n  }\n  \n  calcNumAndDenRecommender = (simusers, simScoreList, movieIndex) => {\n      let num = 0;\n      let den = 0;\n      for (let i = 0; i < simusers.length; i++)   {\n          if (ratings[simusers[i]][movieIndex] != -1)   {\n              let simscorebyuser = simScoreList[simusers[i]];\n              num += ( simscorebyuser * ratings[simusers[i]][movieIndex] );\n              den += simscorebyuser;\n          }\n      }\n      let res = [num,den];\n      return res;\n  }\n  \n  getUsersWithPosScore = (simscorelist) => {\n      let res = [];   \n      for (let i = 0; i < simscorelist.length; i++)   {\n          if (simscorelist[i] > 0)    {\n              res.push(i);\n          }\n      }\n      return res;     //list of indexes (users) with positive similarity scores\n  }\n  \n  \n  findSimilarity = (user1,user2) =>  {\n      let common = this.findCommonMovies(user1, user2);                //array of indexes of common movies rated\n      let profile1 = this.getRatingsForCommonMovies(user1, common);    //array of ratings for user1\n      let profile2 = this.getRatingsForCommonMovies(user2, common);    //array of ratings for user2\n      let average1 = this.getAverageRating(profile1);\n      let average2 = this.getAverageRating(profile2);\n      let numandden = this.calcNumAndDen(profile1,profile2,average1,average2);\n      let sim;\n      if (numandden[0] == 0 || numandden[1] == 0) { sim = 0; }\n      else    { sim = numandden[0]/numandden[1]; } \n      //console.log(\"Num = \" + numandden[0] + \"    Den = \" + numandden[1] + \"    Profile1 = \" + profile1.toString() + \"    Profile2 = \" + profile2.toString());\n      /*STEPS:\n      -find common rated movies between user and user profiles in db\n      -get ratings for these movies from both users\n      -get average user rating on these common movies\n      -do calcs for NUM and DEN and find similarity score\n      \n      console.log(\"Common Movies: \" + common.toString());\n      console.log(\"Ratings for User 1: \" + profile1.toString());\n      console.log(\"Ratings for User 2: \" + profile2.toString());\n      console.log(\"Average Rating for User 1: \" + average1);\n      console.log(\"Average Rating for User 2: \" + average2);\n      console.log(\"Numerator: \" + numandden[0]);\n      console.log(\"Denominator: \" + numandden[1]);\n      console.log(\"Similarity Score: \" + sim);\n      */\n      return sim;\n  }\n  \n  \n  calcNumAndDen = (ratings1, ratings2, average1, average2) =>   {\n      let num = 0;\n      let denopart1 = 0;\n      let denopart2 = 0;\n      for (let i = 0; i < ratings1.length; i++)   {\n          num += ( (ratings1[i]-average1) * (ratings2[i]-average2) );\n          denopart1 += Math.pow((ratings1[i]-average1), 2);\n          denopart2 += Math.pow((ratings2[i]-average2), 2);\n      }\n      let den = Math.sqrt(denopart1*denopart2);\n      let res = [num,den];\n      return res;\n  }\n  \n  getAverageRating = (ratings) => {\n      let sum = 0;\n      for (let i = 0; i < ratings.length; i++)    {\n          sum += ratings[i];\n      }\n      return (sum/ratings.length);\n  }\n  \n  getRatingsForCommonMovies = (user, commonMovies) => {\n      let ratings = [];\n      for (let i = 0; i < commonMovies.length; i++)   {\n          ratings.push(user[commonMovies[i]]);\n      }\n      return ratings;\n  }\n  \n  findCommonMovies = (arr1, arr2) =>{\n      let result = [];\n      for (let i = 0; i < arr1.length; i++)   {\n          if (arr1[i] != -1 && arr2[i] != -1) {\n              result.push(i);\n          }\n      }\n      return result;\n  }\n  }\n  \nexport {Form2};\n",{"ruleId":"94","severity":1,"message":"95","line":60,"column":69,"nodeType":"96","messageId":"97","endLine":60,"endColumn":71},{"ruleId":"94","severity":1,"message":"98","line":125,"column":28,"nodeType":"96","messageId":"97","endLine":125,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":189,"column":56,"nodeType":"96","messageId":"97","endLine":189,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":190,"column":57,"nodeType":"96","messageId":"97","endLine":190,"endColumn":59},{"ruleId":"94","severity":1,"message":"95","line":191,"column":58,"nodeType":"96","messageId":"97","endLine":191,"endColumn":60},{"ruleId":"94","severity":1,"message":"95","line":192,"column":58,"nodeType":"96","messageId":"97","endLine":192,"endColumn":60},{"ruleId":"94","severity":1,"message":"95","line":193,"column":58,"nodeType":"96","messageId":"97","endLine":193,"endColumn":60},{"ruleId":"94","severity":1,"message":"95","line":202,"column":48,"nodeType":"96","messageId":"97","endLine":202,"endColumn":50},{"ruleId":"94","severity":1,"message":"98","line":231,"column":24,"nodeType":"96","messageId":"97","endLine":231,"endColumn":26},{"ruleId":"94","severity":1,"message":"98","line":231,"column":45,"nodeType":"96","messageId":"97","endLine":231,"endColumn":47},{"ruleId":"94","severity":1,"message":"95","line":286,"column":23,"nodeType":"96","messageId":"97","endLine":286,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":286,"column":40,"nodeType":"96","messageId":"97","endLine":286,"endColumn":42},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":110,"column":26,"nodeType":"96","messageId":"97","endLine":110,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":174,"column":54,"nodeType":"96","messageId":"97","endLine":174,"endColumn":56},{"ruleId":"94","severity":1,"message":"95","line":175,"column":55,"nodeType":"96","messageId":"97","endLine":175,"endColumn":57},{"ruleId":"94","severity":1,"message":"95","line":176,"column":56,"nodeType":"96","messageId":"97","endLine":176,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":177,"column":56,"nodeType":"96","messageId":"97","endLine":177,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":178,"column":56,"nodeType":"96","messageId":"97","endLine":178,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":187,"column":46,"nodeType":"96","messageId":"97","endLine":187,"endColumn":48},{"ruleId":"94","severity":1,"message":"98","line":216,"column":22,"nodeType":"96","messageId":"97","endLine":216,"endColumn":24},{"ruleId":"94","severity":1,"message":"98","line":216,"column":43,"nodeType":"96","messageId":"97","endLine":216,"endColumn":45},{"ruleId":"94","severity":1,"message":"95","line":277,"column":21,"nodeType":"96","messageId":"97","endLine":277,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":277,"column":38,"nodeType":"96","messageId":"97","endLine":277,"endColumn":40},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},{"ruleId":"94","severity":1,"message":"95","line":60,"column":69,"nodeType":"96","messageId":"97","endLine":60,"endColumn":71},{"ruleId":"94","severity":1,"message":"98","line":125,"column":28,"nodeType":"96","messageId":"97","endLine":125,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":189,"column":56,"nodeType":"96","messageId":"97","endLine":189,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":190,"column":57,"nodeType":"96","messageId":"97","endLine":190,"endColumn":59},{"ruleId":"94","severity":1,"message":"95","line":191,"column":58,"nodeType":"96","messageId":"97","endLine":191,"endColumn":60},{"ruleId":"94","severity":1,"message":"95","line":192,"column":58,"nodeType":"96","messageId":"97","endLine":192,"endColumn":60},{"ruleId":"94","severity":1,"message":"95","line":193,"column":58,"nodeType":"96","messageId":"97","endLine":193,"endColumn":60},{"ruleId":"94","severity":1,"message":"95","line":202,"column":48,"nodeType":"96","messageId":"97","endLine":202,"endColumn":50},{"ruleId":"94","severity":1,"message":"98","line":231,"column":24,"nodeType":"96","messageId":"97","endLine":231,"endColumn":26},{"ruleId":"94","severity":1,"message":"98","line":231,"column":45,"nodeType":"96","messageId":"97","endLine":231,"endColumn":47},{"ruleId":"94","severity":1,"message":"95","line":286,"column":23,"nodeType":"96","messageId":"97","endLine":286,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":286,"column":40,"nodeType":"96","messageId":"97","endLine":286,"endColumn":42},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Calcs2' is defined but never used.","Identifier","unusedVar",["111"],["112"],["111"],["112"],"no-global-assign","no-unsafe-negation"]